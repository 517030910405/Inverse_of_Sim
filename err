/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/sim_data.py:370: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  axis = fig.add_subplot(111)
Traceback (most recent call last):
  File "1.py", line 10, in <module>
    Inverser.Grad.SimpleDescent()
  File "/mnt/e/Li_Jiasen/SJTU/G3_3/Intern/IMU01/Inverse_of_Sim/Inverser/Grad.py", line 69, in SimpleDescent
    inputData = linear_update(InputData=inputData,i=j,j=k,step=i)
  File "/mnt/e/Li_Jiasen/SJTU/G3_3/Intern/IMU01/Inverse_of_Sim/Inverser/Grad.py", line 49, in linear_update
    vl = getLoss(InputData=ml,maxBatch=step)
  File "/mnt/e/Li_Jiasen/SJTU/G3_3/Intern/IMU01/Inverse_of_Sim/Inverser/Grad.py", line 19, in getLoss
    output = Inverser.GenOutput.sim_run(init=InputData[0], command=InputData[1])
  File "/mnt/e/Li_Jiasen/SJTU/G3_3/Intern/IMU01/Inverse_of_Sim/Inverser/GenOutput.py", line 107, in sim_run
    run()
  File "/mnt/e/Li_Jiasen/SJTU/G3_3/Intern/IMU01/Inverse_of_Sim/Inverser/GenOutput.py", line 103, in run
    test_gen_data_from_files(dir_of_logged_files,fileName=fileName)
  File "/mnt/e/Li_Jiasen/SJTU/G3_3/Intern/IMU01/Inverse_of_Sim/Inverser/GenOutput.py", line 81, in test_gen_data_from_files
    sim.run(1)
  File "/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/ins_sim.py", line 169, in run
    self.__gen_data()
  File "/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/ins_sim.py", line 415, in __gen_data
    self.__gen_data_from_files()
  File "/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/gnss_ins_sim-2.1-py3.6.egg/gnss_ins_sim/sim/ins_sim.py", line 429, in __gen_data_from_files
    data = np.genfromtxt(full_file_name, delimiter=',', skip_header=1)
  File "/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/numpy/lib/npyio.py", line 2096, in genfromtxt
    for (i, conv) in enumerate(converters)]))
  File "/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/numpy/lib/npyio.py", line 2096, in <listcomp>
    for (i, conv) in enumerate(converters)]))
  File "/home/lijiasen0921/anaconda3/envs/IMU/lib/python3.6/site-packages/numpy/lib/npyio.py", line 2095, in <listcomp>
    zip(*[[conv._loose_call(_r) for _r in map(itemgetter(i), rows)]
KeyboardInterrupt
